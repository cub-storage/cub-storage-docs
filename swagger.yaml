---
openapi: "3.0.3"
info:
  description: "Cub Storage API and DB DESIGN is at https://dbdocs.io/deepanshut041/cub-storage?view=relationships"
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "deepanshut041@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.cubstorage.com"
basePath: "/v2"
schemes:
- "https"
- "http"
paths:
  /account-confirm-email/{key}/:
    post:
      operationId: account_confirm_email_create
      parameters:
      - in: path
        name: key
        schema:
          type: string
          pattern: ^[-:\w]+$
        required: true
      tags:
      - account-confirm-email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      description: CRUD products
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductRead'
          description: ''
    post:
      operationId: api_products_create
      description: CRUD products
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductWrite'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWrite'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      description: CRUD products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRead'
          description: ''
    put:
      operationId: api_products_update
      description: CRUD products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductWrite'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWrite'
          description: ''
    patch:
      operationId: api_products_partial_update
      description: CRUD products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductWrite'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWrite'
          description: ''
    delete:
      operationId: api_products_destroy
      description: CRUD products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/products/categories/:
    get:
      operationId: api_products_categories_list
      description: List and Retrieve product categories
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategoryRead'
          description: ''
  /api/products/categories/{id}/:
    get:
      operationId: api_products_categories_retrieve
      description: List and Retrieve product categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product Category.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryRead'
          description: ''
  /api/user/:
    get:
      operationId: api_user_retrieve
      description: Get user details
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/login/:
    post:
      operationId: api_user_login_create
      description: Authenticate existing users using phone number or email and password.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/user/orders/:
    get:
      operationId: api_user_orders_list
      description: CRUD orders of a user
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderRead'
          description: ''
    post:
      operationId: api_user_orders_create
      description: CRUD orders of a user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWrite'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
  /api/user/orders/{order_id}/order-items/:
    get:
      operationId: api_user_orders_order_items_list
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
    post:
      operationId: api_user_orders_order_items_create
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/user/orders/{order_id}/order-items/{id}/:
    get:
      operationId: api_user_orders_order_items_retrieve
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: api_user_orders_order_items_update
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: api_user_orders_order_items_partial_update
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: api_user_orders_order_items_destroy
      description: CRUD order items that are associated with the current order id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: order_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/user/orders/{id}/:
    get:
      operationId: api_user_orders_retrieve
      description: CRUD orders of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRead'
          description: ''
    put:
      operationId: api_user_orders_update
      description: CRUD orders of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWrite'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
    patch:
      operationId: api_user_orders_partial_update
      description: CRUD orders of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
    delete:
      operationId: api_user_orders_destroy
      description: CRUD orders of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/user/payments/:
    get:
      operationId: api_user_payments_list
      description: CRUD payment for an order
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
          description: ''
    post:
      operationId: api_user_payments_create
      description: CRUD payment for an order
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/user/payments/{id}/:
    get:
      operationId: api_user_payments_retrieve
      description: CRUD payment for an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: api_user_payments_update
      description: CRUD payment for an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: api_user_payments_partial_update
      description: CRUD payment for an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: api_user_payments_destroy
      description: CRUD payment for an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/user/payments/checkout/{id}/:
    get:
      operationId: api_user_payments_checkout_retrieve
      description: Create, Retrieve, Update billing address, shipping address and
        payment of an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
    put:
      operationId: api_user_payments_checkout_update
      description: Create, Retrieve, Update billing address, shipping address and
        payment of an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Checkout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checkout'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
    patch:
      operationId: api_user_payments_checkout_partial_update
      description: Create, Retrieve, Update billing address, shipping address and
        payment of an order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCheckout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCheckout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCheckout'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
  /api/user/payments/stripe/create-checkout-session/{order_id}/:
    post:
      operationId: api_user_payments_stripe_create_checkout_session_create
      description: Create and return checkout session ID for order payment of type
        'Stripe'
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          description: No response body
  /api/user/payments/stripe/webhook/:
    post:
      operationId: api_user_payments_stripe_webhook_create
      description: Stripe webhook API view to handle checkout session completed and
        other events.
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/profile/:
    get:
      operationId: api_user_profile_retrieve
      description: Get, Update user profile
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_user_profile_update
      description: Get, Update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_user_profile_partial_update
      description: Get, Update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/user/profile/address/:
    get:
      operationId: api_user_profile_address_list
      description: List and Retrieve user addresses
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressReadOnly'
          description: ''
  /api/user/profile/address/{id}/:
    get:
      operationId: api_user_profile_address_retrieve
      description: List and Retrieve user addresses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressReadOnly'
          description: ''
  /api/user/register/:
    post:
      operationId: api_user_register_create
      description: Register new users using phone number or email and password.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/user/send-sms/:
    post:
      operationId: api_user_send_sms_create
      description: Check if submitted phone number is a valid phone number and send
        OTP.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneNumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneNumber'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ''
  /api/user/verify-phone/:
    post:
      operationId: api_user_verify_phone_create
      description: Check if submitted phone number and OTP matches and verify the
        user.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberSerialzier'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneNumberSerialzier'
          description: ''
  /logout/:
    post:
      operationId: logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - logout
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /password/change/:
    post:
      operationId: password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /password/reset/:
    post:
      operationId: password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /password/reset/confirm/{uidb64}/{token}:
    post:
      operationId: password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /resend-email/:
    post:
      operationId: resend_email_create
      tags:
      - resend-email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /user/login/google/:
    post:
      operationId: user_login_google_create
      description: Social authentication with Google
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
components:
  schemas:
    AddressReadOnly:
      type: object
      description: Serializer class to seralize Address model
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        address_type:
          $ref: '#/components/schemas/AddressTypeEnum'
        default:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryEnum'
        city:
          type: string
          maxLength: 100
        street_address:
          type: string
          maxLength: 100
        apartment_address:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address_type
      - apartment_address
      - city
      - country
      - created_at
      - id
      - street_address
      - updated_at
      - user
    AddressTypeEnum:
      enum:
      - B
      - S
      type: string
    BillingAddress:
      type: object
      description: |-
        Serializer class to seralize address of type billing

        For billing address, automatically set address type to billing
      properties:
        id:
          type: integer
          readOnly: true
        address_type:
          allOf:
          - $ref: '#/components/schemas/AddressTypeEnum'
          readOnly: true
        default:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryEnum'
        city:
          type: string
          maxLength: 100
        street_address:
          type: string
          maxLength: 100
        apartment_address:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address_type
      - apartment_address
      - city
      - country
      - created_at
      - id
      - street_address
      - updated_at
    Checkout:
      type: object
      description: Serializer class to set or update shipping address, billing address
        and payment of an order.
      properties:
        id:
          type: integer
          readOnly: true
        payment:
          $ref: '#/components/schemas/PaymentOption'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
      required:
      - billing_address
      - id
      - payment
      - shipping_address
    CountryEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
    OrderItem:
      type: object
      description: Serializer class for serializing order items
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          readOnly: true
        cost:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cost
      - created_at
      - id
      - order
      - price
      - product
      - quantity
      - updated_at
    OrderRead:
      type: object
      description: Serializer class for reading orders
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: string
          readOnly: true
        shipping_address:
          type: integer
          nullable: true
        billing_address:
          type: integer
          nullable: true
        payment:
          type: integer
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        total_cost:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status79aEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - buyer
      - created_at
      - id
      - order_items
      - payment
      - total_cost
      - updated_at
    OrderWrite:
      type: object
      description: |-
        Serializer class for creating orders and order items

        Shipping address, billing address and payment are not included here
        They will be created/updated on checkout
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status79aEnum'
          readOnly: true
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - order_items
      - status
      - updated_at
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedCheckout:
      type: object
      description: Serializer class to set or update shipping address, billing address
        and payment of an order.
      properties:
        id:
          type: integer
          readOnly: true
        payment:
          $ref: '#/components/schemas/PaymentOption'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
    PatchedOrderItem:
      type: object
      description: Serializer class for serializing order items
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          readOnly: true
        cost:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedOrderWrite:
      type: object
      description: |-
        Serializer class for creating orders and order items

        Shipping address, billing address and payment are not included here
        They will be created/updated on checkout
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status79aEnum'
          readOnly: true
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPayment:
      type: object
      description: Serializer to CRUD payments for an order.
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status496Enum'
          readOnly: true
        payment_option:
          $ref: '#/components/schemas/PaymentOptionEnum'
        order:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProductWrite:
      type: object
      description: Serializer class for writing products
      properties:
        category:
          $ref: '#/components/schemas/ProductCategoryRead'
        name:
          type: string
          maxLength: 200
        desc:
          type: string
          title: Description
        image:
          type: string
          format: uri
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedProfile:
      type: object
      description: Serializer class to serialize the user Profile model
      properties:
        avatar:
          type: string
          format: uri
        bio:
          type: string
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Payment:
      type: object
      description: Serializer to CRUD payments for an order.
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status496Enum'
          readOnly: true
        payment_option:
          $ref: '#/components/schemas/PaymentOptionEnum'
        order:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - buyer
      - created_at
      - id
      - order
      - payment_option
      - status
      - updated_at
    PaymentOption:
      type: object
      description: Payment serializer for checkout. Order will be automatically set
        during checkout.
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status496Enum'
          readOnly: true
        payment_option:
          $ref: '#/components/schemas/PaymentOptionEnum'
        order:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - buyer
      - created_at
      - id
      - order
      - payment_option
      - status
      - updated_at
    PaymentOptionEnum:
      enum:
      - P
      - S
      type: string
    PhoneNumber:
      type: object
      description: Serializer class to serialize phone number.
      properties:
        phone_number:
          type: string
      required:
      - phone_number
    ProductCategoryRead:
      type: object
      description: Serializer class for product categories
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category name
          maxLength: 100
        icon:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ProductRead:
      type: object
      description: Serializer class for reading products
      properties:
        id:
          type: integer
          readOnly: true
        seller:
          type: string
          readOnly: true
        category:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        desc:
          type: string
          title: Description
        image:
          type: string
          format: uri
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - id
      - name
      - price
      - seller
      - updated_at
    ProductWrite:
      type: object
      description: Serializer class for writing products
      properties:
        category:
          $ref: '#/components/schemas/ProductCategoryRead'
        name:
          type: string
          maxLength: 200
        desc:
          type: string
          title: Description
        image:
          type: string
          format: uri
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - category
      - name
      - price
    Profile:
      type: object
      description: Serializer class to serialize the user Profile model
      properties:
        avatar:
          type: string
          format: uri
        bio:
          type: string
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    ShippingAddress:
      type: object
      description: |-
        Serializer class to seralize address of type shipping

        For shipping address, automatically set address type to shipping
      properties:
        id:
          type: integer
          readOnly: true
        address_type:
          allOf:
          - $ref: '#/components/schemas/AddressTypeEnum'
          readOnly: true
        default:
          type: boolean
        country:
          $ref: '#/components/schemas/CountryEnum'
        city:
          type: string
          maxLength: 100
        street_address:
          type: string
          maxLength: 100
        apartment_address:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address_type
      - apartment_address
      - city
      - country
      - created_at
      - id
      - street_address
      - updated_at
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    Status496Enum:
      enum:
      - P
      - C
      - F
      type: string
    Status79aEnum:
      enum:
      - P
      - C
      type: string
    User:
      type: object
      description: Serializer class to seralize User model
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressReadOnly'
          readOnly: true
      required:
      - addresses
      - id
      - phone_number
      - profile
    UserLogin:
      type: object
      description: Serializer to login users with email or phone number.
      properties:
        phone_number:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - password
    UserRegistration:
      type: object
      description: Serializer for registrating new users using email or phone number.
      properties:
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        first_name:
          type: string
          writeOnly: true
        last_name:
          type: string
          writeOnly: true
        phone_number:
          type: string
          writeOnly: true
      required:
      - first_name
      - last_name
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    VerifyPhoneNumberSerialzier:
      type: object
      description: Serializer class to verify OTP.
      properties:
        phone_number:
          type: string
        otp:
          type: string
          maxLength: 6
      required:
      - otp
      - phone_number
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: phonenumber-auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
